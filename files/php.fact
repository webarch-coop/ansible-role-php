#!/usr/bin/env bash
# Ansible managed

set -euo pipefail

aptitude="$(which aptitude)"
jo="$(which jo)"
phpquery="/usr/sbin/phpquery"

if [[ ! -f "${phpquery}" ]]
then
  "${jo}" state=absent
else
  declare -a packages=()
  readarray -t packages < <("${aptitude}" -q=99 search '~i! ?name("libapache2-mod-php|php")' -F '%p')
  if [[ "${#packages[@]}" == 0 ]]
  then
    "${jo}" state=absent
  else
    declare -a versions=()
    readarray -t versions < <("${phpquery}" -V | sort -V)
    "${jo}" state=present packages=$(jo -e -a "${packages[@]}") versions=$(
      "${jo}" $(
        for v in "${versions[@]}"
        do
          declare -a mods_available=()
          readarray -t mods_available < <("${phpquery}" -v "${v}" -M | sort)
          declare -a sapis=()
          readarray -t sapis < <("${phpquery}" -v "${v}" -S | sort)
          echo ${v}=$(
            "${jo}" state=present mods_available=$(jo -a "${mods_available[@]}") $(
              for s in "${sapis[@]}"
              do
                declare -a mods_enabled=()
                readarray -t mods_enabled < <("${phpquery}" -d -v "${v}" -s "${s}" -M | grep "Enabled for ${s}" | awk '{ print $1 }' | sort)
                echo sapis["${s}"]=$(
                  "${jo}" state=present mods_enabled=$(
                    "${jo}" -e -a "${mods_enabled[@]}"
                  )
                )
              done
            )
          )
        done
      )
    )
  fi
fi
