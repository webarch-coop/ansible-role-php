# Copyright 2019-2024 Chris Croome
#
# This file is part of the Webarchitects PHP Ansible role.
#
# The Webarchitects PHP Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects PHP Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects PHP Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Sury PHP apt repo present
  block:

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Sury GPG key present
      ansible.builtin.get_url:
        url: "{{ php_gpg_url }}"
        checksum: "{{ php_gpg_checksum }}"
        dest: /etc/apt/keyrings/php.gpg
        mode: "0644"
        owner: root
        group: root

    - name: Stat the GPG key
      ansible.builtin.stat:
        path: /etc/apt/keyrings/php.gpg
      register: php_gpg_file

    - name: Check the GPG fingerprints when the public key is present
      block:

        - name: PHP gpg key check command
          ansible.builtin.command: >-
            gpg --with-colons
            {% if ansible_local.gpg.version is version('2.2.12', '<') %}
            --with-fingerprint --with-subkey-fingerprint
            {% else %}
            --show-keys
            {% endif %}
            /etc/apt/keyrings/php.gpg
          check_mode: false
          changed_when: false
          register: php_gpg

        - name: Set a fact for the PHP GPG fingerprints on the server
          ansible.builtin.set_fact:
            php_gpg_fingerprints_found: "{{ php_gpg.stdout | string | community.general.jc('gpg') | community.general.json_query('[?type==`fpr`].user_id') | list }}"

        - name: PHP gpg key check fingerprints
          ansible.builtin.assert:
            that:
              - php_gpg_fingerprints_found | difference(php_gpg_fingerprints) | length == 0
              - php_gpg_fingerprints | difference(php_gpg_fingerprints_found) | length == 0
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

      when: ( php_gpg_file.stat.exists | bool )

    - name: Stat PHP repository sources file
      ansible.builtin.stat:
        path: /etc/apt/sources.list.d/php.sources
      register: php_sources_path

    - name: Read the PHP repository sources file
      ansible.builtin.include_tasks: sources_file.yml
      when: php_sources_path.stat.exists | bool

    - name: Set a fact for the prior PHP repository sources file contents
      ansible.builtin.set_fact:
        php_sources_contents_prior: "{{ php_sources_contents }}"
      when: php_sources_contents is defined

    - name: PHP repository sources file present
      ansible.builtin.deb822_repository:
        allow_downgrade_to_insecure: false
        allow_insecure: false
        allow_weak: false
        architectures: "{{ ansible_facts.ansible_local.dpkg.arch }}"
        check_date: true
        check_valid_until: true
        components: main
        enabled: true
        name: php
        signed_by: /etc/apt/keyrings/php.gpg
        suites: "{{ ansible_distribution_release }}"
        types: deb
        uris: https://packages.sury.org/php/
      register: php_sources

    # - name: Stat PHP repository sources file
    #   ansible.builtin.stat:
    #     path: /etc/apt/sources.list.d/php.sources
    #   register: php_sources_path

    # - name: Read the PHP repository sources file
    #   ansible.builtin.include_tasks: sources_file.yml
    #   when: php_sources_path.stat.exists | bool

    # - name: Set a fact for the updated PHP repository sources file contents
    #   ansible.builtin.set_fact:
    #     php_sources_contents_updated: "{{ php_sources_contents }}"
    #   when: php_sources_contents is defined

    - name: Debug php_sources
      ansible.builtin.debug:
        var: php_sources
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Diff PHP repository sources file update
      ansible.utils.fact_diff:
        before: "{{ php_sources_contents_prior }}"
        after: "{{ php_sources_contents_updated }}"
      vars:
        php_sources_contents_updated: "{{ php_sources.results.repo | string | community.general.jc('ini') }}"
      check_mode: false
      changed_when: false
      when:
        - ansible_diff_mode | bool
        - php_sources_contents_prior is defined
        - php_sources_contents_updated is defined
        - php_sources_contents_prior != php_sources_contents_updated

    - name: PHP apt preferences present
      ansible.builtin.template:
        src: php.pref.j2
        dest: /etc/apt/preferences.d/php.pref
        mode: "0644"
        owner: root
        group: root
      environment:
        DEFAULT_MANAGED_STR: "{{ php_ansible_managed }}"
      register: php_preferences

    - name: Update apt cache and autoclean and autoremove
      block:

        - name: Update apt cache  # noqa: no-handler
          ansible.builtin.apt:
            update_cache: true
            cache_valid_time: 0

        - name: Apt autoclean and autoremove  # noqa: no-handler
          ansible.builtin.apt:
            upgrade: dist
            autoclean: true
            autoremove: true
            update_cache: false

      when: >-
        ( php_sources.changed | bool ) or
        ( php_preferences.changed | bool )
      tags:
        - molecule-idempotence-notest

  when: php_sury | bool
  tags:
    - php
    - php_apt

- name: Sury PHP apt repo absent
  block:

    - name: Files absent
      ansible.builtin.file:
        path: "{{ path }}"
        state: absent
      loop:
        - /etc/apt/keyrings/php.gpg
        - /etc/apt/sources.list.d/php.sources
        - /etc/apt/preferences.d/php.pref
      loop_control:
        loop_var: path
        label: "{{ path | basename }}"
      register: php_repo_absent

    - name: Update apt cache and autoclean and autoremove
      block:

        - name: Update apt cache  # noqa: no-handler
          ansible.builtin.apt:
            update_cache: true
            cache_valid_time: 0

        - name: Apt autoclean and autoremove  # noqa: no-handler
          ansible.builtin.apt:
            autoclean: true
            autoremove: true
            update_cache: false

      when: php_repo_absent.changed
      tags:
        - molecule-idempotence-notest

  when: not php_sury | bool
  tags:
    - php
    - php_apt
...
