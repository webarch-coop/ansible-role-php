# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects PHP Ansible role.
#
# The Webarchitects PHP Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects PHP Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects PHP Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: PHP configuration file edited
  block:

    - name: Slurp existing PHP configuration file
      ansible.builtin.slurp:
        path: "{{ php_conf_file }}"
      register: php_conf_file_b64encoded

    - name: Set a fact for the existing PHP configuration file variables
      ansible.builtin.set_fact:
        php_conf_file_existing_vars: "{{ php_conf_file_b64encoded['content'] | ansible.builtin.b64decode | community.general.jc('ini') }}"

    - name: Debug the existing PHP configuration file variables
      ansible.builtin.debug:
        var: php_conf_file_existing_vars
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Debug the existing PHP configuration file sections
      ansible.builtin.debug:
        var: php_conf_file_existing_vars.keys()
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Set a fact for the proposed PHP configuration file variables
      ansible.builtin.set_fact:
        php_conf_file_proposed_vars: "{{ php_config | ansible.builtin.json_query(php_conf_file_proposed_vars_json_query) }}"
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      vars:
        php_conf_file_proposed_vars_json_query: "[?state=='present'].files[]|[?path=='{{ php_conf_file }}'].conf|[0]"

    - name: Debug the proposed PHP configuration file variables
      ansible.builtin.debug:
        var: php_conf_file_proposed_vars
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Debug the proposed PHP configuration file sections
      ansible.builtin.debug:
        var: php_conf_file_proposed_vars.keys()
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    # TODO Use the community.general.dependent lookup to replace the looped include and the loop in the included file...
    #      https://docs.ansible.com/ansible/latest/collections/community/general/dependent_lookup.html

    - name: Include the file section edited tasks
      ansible.builtin.include_tasks: file_section_edited.yml
      loop: "{{ php_conf_file_proposed_vars | dict2items }}"
      loop_control:
        loop_var: php_conf_section
      when: php_conf_file_proposed_vars.keys() | length != 0

  tags:
    - php
    - php_cfg
    - php_conf
...
