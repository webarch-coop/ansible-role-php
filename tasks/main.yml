---
- name: Install and configure PHP-FPM
  block:

    - name: Check that the distro is Debian Bullseye, Buster or Stretch or Ubuntu Focal or Bionic
      assert:
        that:
          - ansible_distribution_release is defined
          - ansible_distribution_release is regex("^bionic|bullseye|buster|focal|stretch$")

    - name: Main PHP-FPM packages present
      apt:
        pkg: "{{ php_packages }}"
        state: present
        update_cache: true
      notify: Restart php-fpm

    - name: Check if phpquery is present
      command: which phpquery
      check_mode: false
      register: phpfpm_phpquery_path
      failed_when: ( "phpquery" not in phpfpm_phpquery_path.stdout )
      changed_when: ( "phpquery" not in phpfpm_phpquery_path.stdout )

    - name: Run phpquery to get the PHP version
      command: phpquery -V
      check_mode: false
      register: phpfpm_phpquery_version
      failed_when: ( phpfpm_phpquery_version.stdout is not version('7.0', '>=') ) or ( phpfpm_phpquery_version.stdout_lines | count > 1 )
      changed_when: false

    - name: Set a variable for the PHP version
      set_fact:
        phpfpm_version: "{{ phpfpm_phpquery_version.stdout }}"

    - name: Set an array for the PHP packages with version names in to install
      set_fact:
        phpfpm_version_packages: "{{ phpfpm_version_packages | default([]) }} + [ 'php{{ phpfpm_version }}-{{ package }}' ]"
      loop: "{{ phpfpm_packages }}"
      loop_control:
        loop_var: package
        label: "{{ package }}"

    - name: "PHP {{ phpfpm_version }} packages installed"
      apt:
        pkg: "{{ phpfpm_version_packages }}"
        state: present
        update_cache: false
      notify: Restart php-fpm

    - name: "/etc/php/{{ phpfpm_version }}/fpm/php.ini in place"
      template:
        src: "templates/php.ini.j2"
        dest: "/etc/php/{{ phpfpm_version }}/fpm/php.ini"
        mode: 0644
        backup: false
      notify: Restart php-fpm

    - name: "/etc/php/{{ phpfpm_version }}/cli/php.ini in place"
      template:
        src: "templates/cli_php.ini.j2"
        dest: "/etc/php/{{ phpfpm_version }}/cli/php.ini"
        mode: 0644
        backup: false
      notify: Restart php-fpm

    - name: PHP-FPM www.conf pool disabled
      file:
        path: "/etc/php/{{ phpfpm_version }}/fpm/pool.d/www.conf"
        state: absent
      when: ( phpfpm_www_pool_enabled is defined ) and ( not phpfpm_www_pool_enabled )
      notify: Restart php-fpm

    - name: Check and enable the www pool
      block:

        - name: Include www pool server variable checks
          include_tasks: pool_check.yml
          when: phpfpm_www_pool_pm == "dynamic"
          vars:
            phpfpm_pm: "{{ phpfpm_www_pool_pm }}"
            phpfpm_pm_max_children: "{{ phpfpm_www_pool_pm_max_children }}"
            phpfpm_pm_start_servers: "{{ phpfpm_www_pool_pm_start_servers }}"
            phpfpm_pm_min_spare_servers: "{{ phpfpm_www_pool_pm_min_spare_servers }}"
            phpfpm_pm_max_spare_servers: "{{ phpfpm_www_pool_pm_max_spare_servers }}"

        - name: PHP-FPM www.conf pool enabled
          template:
            src: templates/www.conf.j2
            dest: "/etc/php/{{ phpfpm_version }}/fpm/pool.d/www.conf"
            backup: false
          notify: Restart php-fpm

      when: ( phpfpm_www_pool_enabled is not defined ) or ( phpfpm_www_pool_enabled is defined and phpfpm_www_pool_enabled )

    - name: Check the PHP-FPM configuration
      command: "php-fpm{{ phpfpm_version }} --test"
      register: phpfpm_test
      failed_when: ( "test is successful" not in phpfpm_test.stderr )
      changed_when: ( "test is successful" not in phpfpm_test.stderr )

    # The log rotates once a week by default so this is a fairly crude metric but
    # it is good enough to flag up how often the max_children limits are being hit
    - name: Cron job to email root the results of grepping the logs for pm.max_children
      cron:
        name: "Grep PHP{{ phpfpm_version }} log for pm.max_children"
        hour: "06"
        minute: "01"
        job: "grep 'server reached pm.max_children setting' /var/log/php{{ phpfpm_version }}-fpm.log | awk '{ print $5 }' | sed 's/]$//' | sort | uniq -c | sort -n"
      when: ( phpfpm_log_grep is defined ) and ( phpfpm_log_grep )

  tags:
    - phpfpm
...
