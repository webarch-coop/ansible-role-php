# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects PHP Ansible role.
#
# The Webarchitects PHP Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects PHP Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects PHP Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: PHP
  block:

    - name: Include apt role local fact tasks
      ansible.builtin.include_role:
        name: apt
        tasks_from: local_facts.yml
      when: >-
        ( ansible_local.dpkg.arch is not defined ) or
        ( ansible_local.gpg.version is not defined ) or
        ( ansible_local.bash.path is not defined )
      tags:
        - php_apt

    - name: Include PHP check tasks
      ansible.builtin.include_tasks: checks.yml
      tags:
        - php_cfg
        - php_conf

    - name: Include Sury PHP apt repo tasks
      ansible.builtin.include_tasks: apt.yml
      when: php_sury is defined
      tags:
        - php_apt

    - name: Include PHP package tasks
      ansible.builtin.include_tasks: pkg.yml
      when: php_versions is defined
      tags:
        - php_pkg

    - name: Configure PHP
      block:

        - name: Check the PHP versions installed
          ansible.builtin.command: /usr/sbin/phpquery -V
          check_mode: false
          changed_when: false
          register: php_phpquery_versions

        - name: Set a fact for the PHP versions installed
          ansible.builtin.set_fact:
            php_ver_installed: "{{ php_phpquery_versions.stdout_lines | sort }}"

        - name: Debug PHP versions that are to be installed
          ansible.builtin.debug:
            var: php_ver_present
            verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

        - name: Debug PHP versions that are installed
          ansible.builtin.debug:
            var: php_ver_installed
            verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

        - name: Debug PHP versions that are to be configured
          ansible.builtin.debug:
            var: php_conf_ver_present
            verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

        - name: PHP versions that are not installed cannot be configured unless in check mode
          ansible.builtin.fail:
            msg: "PHP versions {% for php_v in php_conf_ver_present | difference(php_ver_installed) %}{{ php_v }}{{ ', ' if not loop.last }}{% endfor %} cannot be configured when they are not present."
          when:
            - not ansible_check_mode | bool
            - php_conf_ver_present | difference(php_ver_installed) != []

        - name: Include PHP configuration tasks when versions are present or when running in check mode
          ansible.builtin.include_tasks: conf.yml
          when: >-
            ( ansible_check_mode | bool ) or
            ( php_conf_ver_present | difference(php_ver_installed) == [] )

      when:
        - ( php_config is defined )
        - ( php_conf_ver_present != [] ) or ( php_conf_ver_absent != [] )
      tags:
        - php_cfg
        - php_conf

    - name: PHP alternatives
      block:

        - name: Debug PHP alternatives
          ansible.builtin.debug:
            var: php_alternatives_update
            verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

        - name: Include alternatives role
          ansible.builtin.include_role:
            name: alternatives
          vars:
            alternatives: true
            alternatives_update: "{{ php_alternatives_update }}"

      when:
        - php_alternatives | bool
        - php_alternatives_update is defined
      tags:
        - php_alt

  when: php | bool
  tags:
    - php
...
