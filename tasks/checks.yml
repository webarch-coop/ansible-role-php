# Copyright 2019-2025 Chris Croome
#
# This file is part of the Webarchitects PHP Ansible role.
#
# The Webarchitects PHP Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects PHP Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects PHP Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: PHP checks
  block:

    - name: Check the PHP versions installed
      ansible.builtin.command: /usr/sbin/phpquery -V
      check_mode: false
      changed_when: false
      register: php_phpquery_versions

    - name: Set a fact for the PHP versions installed
      ansible.builtin.set_fact:
        php_ver_installed: "{{ php_phpquery_versions.stdout_lines | sort | list }}"

    - name: Debug PHP versions that are installed
      ansible.builtin.debug:
        var: php_ver_installed
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Stat PHP-FPM pool.d directories for the versions of PHP installed
      ansible.builtin.stat:
        path: "/etc/php/{{ php_ver_inst }}/fpm/pool.d"
      register: php_fpm_pool_dirs_found
      loop: "{{ php_ver_installed }}"
      loop_control:
        loop_var: php_ver_inst

    - name: Debug php_fpm_pool_files_found.results
      ansible.builtin.debug:
        var: php_fpm_pool_dirs_found.results
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: Set a fact for the PHP-FPM pool.d directories found
      ansible.builtin.set_fact:
        php_fpm_pool_dirs: "{{ php_fpm_pool_dirs_found | community.general.json_query('results[].stat.path') }}"

    - name: Debug php_fpm_pool_dirs
      ansible.builtin.debug:
        var: php_fpm_pool_dirs
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Find PHP-FPM pool files for the versions of PHP installed
      ansible.builtin.find:
        paths: "{{ php_fpm_pool_dir }}"
        recurse: false
        file_type: file
        use_regex: false
        patterns: '*.conf'
      register: php_fpm_pool_files_found
      loop: "{{ php_fpm_pool_dirs }}"
      loop_control:
        loop_var: php_fpm_pool_dir

    - name: Debug php_fpm_pool_files_found.results
      ansible.builtin.debug:
        var: php_fpm_pool_files_found.results
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: Set a fact for the PHP-FPM pool file paths
      ansible.builtin.set_fact:
        php_fpm_pool_files: "{{ php_fpm_pool_files_found.results | community.general.json_query('[].files[].path') }}"

    - name: Debug php_fpm_pool_files
      ansible.builtin.debug:
        var: php_fpm_pool_files
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Slurp all the pool.d files
      ansible.builtin.slurp:
        path: "{{ php_fpm_pool_file }}"
      register: php_fpm_pool_files_b64encoded
      loop: "{{ php_fpm_pool_files }}"
      loop_control:
        loop_var: php_fpm_pool_file

    - name: Decode the base64 encoded pool.d files
      ansible.builtin.set_fact:
        php_fpm_pool_file_contents: "{{ php_fpm_pool_files_b64encoded | json_query('results[].content') | map('ansible.builtin.b64decode') | map('community.general.from_ini') }}"

    - name: Debug the slurped pool.d file contents
      ansible.builtin.debug:
        var: php_fpm_pool_file_contents
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: Set a fact for a list of PHP-FPM socket paths and pool names
      ansible.builtin.set_fact:
        php_fpm_pool_file_socket_paths: "{{ php_fpm_pool_file_contents | community.general.json_query('[*].[*][][][].listen') | map('ansible.builtin.regex_replace', php_quote_start_regex) | map('ansible.builtin.regex_replace', php_quote_end_regex) | sort }}"
        php_fpm_pool_file_pool_names: "{{ php_fpm_pool_file_contents | community.general.json_query('[].keys(@)[]') | sort }}"

    - name: Debug php_fpm_pool_file_socket_paths
      ansible.builtin.debug:
        var: php_fpm_pool_file_socket_paths
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Fail when there are duplicated PHP-FPM socket paths
      ansible.builtin.fail:
        msg: >-
          PHP-FPM pool socket paths need to be unique, these paths are duplicated
          {{ php_fpm_pool_file_socket_paths | community.general.counter | ansible.builtin.dict2items | selectattr('value', '>', 1) |
          map(attribute='key') | join(', ') }}. You can use this role to remove the duplicates by running with
          --extra-vars "php_fpm_pool_check_fail=false".
      when:
        - php_fpm_pool_check_fail | bool
        - php_fpm_pool_file_socket_paths is defined
        - php_fpm_pool_file_socket_paths != []
        - php_fpm_pool_file_socket_paths | sort | length != php_fpm_pool_file_socket_paths | sort | unique | length

    - name: Warn when there are duplicated PHP-FPM socket paths
      ansible.builtin.debug:
        msg: >-
          PHP-FPM pool names need to be unique, these paths are duplicated
          {{ php_fpm_pool_file_socket_paths | community.general.counter | ansible.builtin.dict2items | selectattr('value', '>', 1) |
          map(attribute='key') | join(', ') }}. You can use this role to remove the duplicates by running with
          --extra-vars "php_fpm_pool_check_fail=false".
      when:
        - not php_fpm_pool_check_fail | bool
        - php_fpm_pool_file_socket_paths is defined
        - php_fpm_pool_file_socket_paths != []
        - php_fpm_pool_file_socket_paths | sort | length != php_fpm_pool_file_socket_paths | sort | unique | length

    - name: Debug php_fpm_pool_file_pool_names
      ansible.builtin.debug:
        var: php_fpm_pool_file_pool_names
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Fail when there are duplicated PHP-FPM pool names
      ansible.builtin.fail:
        msg: >-
          PHP-FPM pool names need to be unique, these names are duplicated
          {{ php_fpm_pool_file_pool_names | community.general.counter | ansible.builtin.dict2items | selectattr('value', '>', 1) |
          map(attribute='key') | join(', ') }}. You can use this role to remove the duplicates by running with
          --extra-vars "php_fpm_pool_check_fail=false".
      when:
        - php_fpm_pool_check_fail | bool
        - php_fpm_pool_file_pool_names is defined
        - php_fpm_pool_file_pool_names != []
        - php_fpm_pool_file_pool_names | sort | length != php_fpm_pool_file_pool_names | sort | unique | length

    - name: Warn when there are duplicated PHP-FPM pool names
      ansible.builtin.debug:
        msg: >-
          PHP-FPM pool names need to be unique, these names are duplicated
          {{ php_fpm_pool_file_pool_names | community.general.counter | ansible.builtin.dict2items | selectattr('value', '>', 1) |
          map(attribute='key') | join(', ') }}. You can use this role to remove the duplicates by running with
          --extra-vars "php_fpm_pool_check_fail=false".
      when:
        - not php_fpm_pool_check_fail | bool
        - php_fpm_pool_file_pool_names is defined
        - php_fpm_pool_file_pool_names != []
        - php_fpm_pool_file_pool_names | sort | length != php_fpm_pool_file_pool_names | sort | unique | length

  tags:
    - php
    - php_cfg
    - php_conf
    - php_mods
...
