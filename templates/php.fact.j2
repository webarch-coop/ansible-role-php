#!/usr/bin/env bash
# {{ ansible_managed }}

set -euo pipefail
APTITUDE="{{ php_aptitude }}"
PHPQUERY="{{ php_phpquery }}"

if [[ -f "${APTITUDE}" ]]
then
  declare -a packages=()
  readarray -t packages < <(aptitude -q=99 search '~i!~M php' -F '%p')
  if [[ "${#packages[@]}" == 0 ]]
  then
    jo state=absent
  else
    if [[ -f "${PHPQUERY}" ]]
    then
      declare -a versions=()
      readarray -t versions < <("${PHPQUERY}" -V | sort -V)
      jo state=present packages_present=$(jo -e -a "${packages[@]}") versions=$(i
        jo $(
          for v in "${versions[@]}"
          do
            declare -a mods_available=()
            readarray -t mods_available < <("${PHPQUERY}" -v "${v}" -M | sort)
            declare -a sapis=()
            readarray -t sapis < <("${PHPQUERY}" -v "${v}" -S | sort)
            echo ${v}=$(
              jo state=present mods_available=$(jo -a "${mods_available[@]}") $(
                for s in "${sapis[@]}"
                do
                  declare -a mods_enabled=()
                  for m in "${mods_available[@]}"
                  do
                    if "${PHPQUERY}" -v "${v}" -s "${s}" -m "${m}" -q
                    then
                      mods_enabled=(${mods_enabled[@]} ${m})
                    fi
                  done
                  echo sapis["${s}"]=$(
                    jo state=present mods_enabled=$(
                      jo -e -a "${mods_enabled[@]}"
                    )
                  )
                done
              )
            )
          done
        )
      )
    else
      jo state=absent
    fi
  fi
fi  
